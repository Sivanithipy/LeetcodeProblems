/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> result = new ArrayList<>();
        if(root==null) return result;
        Queue<TreeNode> que = new LinkedList<>();
        que.add(root);
        boolean leftToRight=true;
        while(!que.isEmpty())
        {
            int size = que.size();
            Integer[] row = new Integer[size];
            for(int i=0;i<size;i++)
            {
                TreeNode node = que.poll();
                int index = leftToRight ? i:size-1-i;
                row[index] = node.val;
                if(node.left!=null)
                {
                    que.add(node.left);
                }
                if(node.right!=null)
                {
                    que.add(node.right);
                }
            }
            result.add(Arrays.asList(row));
            leftToRight = !leftToRight;
        }
        return result;
    }
}
